// source: tensorflow/core/framework/summary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_tensor_pb = require('../../../tensorflow/core/framework/tensor_pb.js');
goog.object.extend(proto, tensorflow_core_framework_tensor_pb);
goog.exportSymbol('proto.tensorflow.DataClass', null, global);
goog.exportSymbol('proto.tensorflow.HistogramProto', null, global);
goog.exportSymbol('proto.tensorflow.Summary', null, global);
goog.exportSymbol('proto.tensorflow.Summary.Audio', null, global);
goog.exportSymbol('proto.tensorflow.Summary.Image', null, global);
goog.exportSymbol('proto.tensorflow.Summary.Value', null, global);
goog.exportSymbol('proto.tensorflow.Summary.Value.ValueCase', null, global);
goog.exportSymbol('proto.tensorflow.SummaryDescription', null, global);
goog.exportSymbol('proto.tensorflow.SummaryMetadata', null, global);
goog.exportSymbol('proto.tensorflow.SummaryMetadata.PluginData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.SummaryDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.SummaryDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.SummaryDescription.displayName = 'proto.tensorflow.SummaryDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.HistogramProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.HistogramProto.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.HistogramProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.HistogramProto.displayName = 'proto.tensorflow.HistogramProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.SummaryMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.SummaryMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.SummaryMetadata.displayName = 'proto.tensorflow.SummaryMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.SummaryMetadata.PluginData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.SummaryMetadata.PluginData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.SummaryMetadata.PluginData.displayName = 'proto.tensorflow.SummaryMetadata.PluginData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.Summary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.Summary.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.Summary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.Summary.displayName = 'proto.tensorflow.Summary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.Summary.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.Summary.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.Summary.Image.displayName = 'proto.tensorflow.Summary.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.Summary.Audio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.Summary.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.Summary.Audio.displayName = 'proto.tensorflow.Summary.Audio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.Summary.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.Summary.Value.oneofGroups_);
};
goog.inherits(proto.tensorflow.Summary.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.Summary.Value.displayName = 'proto.tensorflow.Summary.Value';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.SummaryDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.SummaryDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.SummaryDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeHint: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.SummaryDescription}
 */
proto.tensorflow.SummaryDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.SummaryDescription;
  return proto.tensorflow.SummaryDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.SummaryDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.SummaryDescription}
 */
proto.tensorflow.SummaryDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeHint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.SummaryDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.SummaryDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.SummaryDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeHint();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string type_hint = 1;
 * @return {string}
 */
proto.tensorflow.SummaryDescription.prototype.getTypeHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.SummaryDescription} returns this
 */
proto.tensorflow.SummaryDescription.prototype.setTypeHint = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.HistogramProto.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.HistogramProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.HistogramProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.HistogramProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.HistogramProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    num: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    sum: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    sumSquares: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    bucketLimitList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    bucketList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.HistogramProto}
 */
proto.tensorflow.HistogramProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.HistogramProto;
  return proto.tensorflow.HistogramProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.HistogramProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.HistogramProto}
 */
proto.tensorflow.HistogramProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMax(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSumSquares(value);
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBucketLimit(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBucket(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.HistogramProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.HistogramProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.HistogramProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.HistogramProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getNum();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSum();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSumSquares();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getBucketLimitList();
  if (f.length > 0) {
    writer.writePackedDouble(
      6,
      f
    );
  }
  f = message.getBucketList();
  if (f.length > 0) {
    writer.writePackedDouble(
      7,
      f
    );
  }
};


/**
 * optional double min = 1;
 * @return {number}
 */
proto.tensorflow.HistogramProto.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double max = 2;
 * @return {number}
 */
proto.tensorflow.HistogramProto.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double num = 3;
 * @return {number}
 */
proto.tensorflow.HistogramProto.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setNum = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double sum = 4;
 * @return {number}
 */
proto.tensorflow.HistogramProto.prototype.getSum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setSum = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double sum_squares = 5;
 * @return {number}
 */
proto.tensorflow.HistogramProto.prototype.getSumSquares = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setSumSquares = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * repeated double bucket_limit = 6;
 * @return {!Array<number>}
 */
proto.tensorflow.HistogramProto.prototype.getBucketLimitList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setBucketLimitList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.addBucketLimit = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.clearBucketLimitList = function() {
  return this.setBucketLimitList([]);
};


/**
 * repeated double bucket = 7;
 * @return {!Array<number>}
 */
proto.tensorflow.HistogramProto.prototype.getBucketList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.setBucketList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.addBucket = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorflow.HistogramProto} returns this
 */
proto.tensorflow.HistogramProto.prototype.clearBucketList = function() {
  return this.setBucketList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.SummaryMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.SummaryMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.SummaryMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    pluginData: (f = msg.getPluginData()) && proto.tensorflow.SummaryMetadata.PluginData.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    summaryDescription: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataClass: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.SummaryMetadata}
 */
proto.tensorflow.SummaryMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.SummaryMetadata;
  return proto.tensorflow.SummaryMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.SummaryMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.SummaryMetadata}
 */
proto.tensorflow.SummaryMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.SummaryMetadata.PluginData;
      reader.readMessage(value,proto.tensorflow.SummaryMetadata.PluginData.deserializeBinaryFromReader);
      msg.setPluginData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummaryDescription(value);
      break;
    case 4:
      var value = /** @type {!proto.tensorflow.DataClass} */ (reader.readEnum());
      msg.setDataClass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.SummaryMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.SummaryMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.SummaryMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPluginData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tensorflow.SummaryMetadata.PluginData.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSummaryDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataClass();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.SummaryMetadata.PluginData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.SummaryMetadata.PluginData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryMetadata.PluginData.toObject = function(includeInstance, msg) {
  var f, obj = {
    pluginName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: msg.getContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.SummaryMetadata.PluginData}
 */
proto.tensorflow.SummaryMetadata.PluginData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.SummaryMetadata.PluginData;
  return proto.tensorflow.SummaryMetadata.PluginData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.SummaryMetadata.PluginData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.SummaryMetadata.PluginData}
 */
proto.tensorflow.SummaryMetadata.PluginData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPluginName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.SummaryMetadata.PluginData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.SummaryMetadata.PluginData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SummaryMetadata.PluginData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPluginName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string plugin_name = 1;
 * @return {string}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.getPluginName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.SummaryMetadata.PluginData} returns this
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.setPluginName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.getContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes content = 2;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tensorflow.SummaryMetadata.PluginData} returns this
 */
proto.tensorflow.SummaryMetadata.PluginData.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional PluginData plugin_data = 1;
 * @return {?proto.tensorflow.SummaryMetadata.PluginData}
 */
proto.tensorflow.SummaryMetadata.prototype.getPluginData = function() {
  return /** @type{?proto.tensorflow.SummaryMetadata.PluginData} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.SummaryMetadata.PluginData, 1));
};


/**
 * @param {?proto.tensorflow.SummaryMetadata.PluginData|undefined} value
 * @return {!proto.tensorflow.SummaryMetadata} returns this
*/
proto.tensorflow.SummaryMetadata.prototype.setPluginData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.SummaryMetadata} returns this
 */
proto.tensorflow.SummaryMetadata.prototype.clearPluginData = function() {
  return this.setPluginData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.SummaryMetadata.prototype.hasPluginData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.tensorflow.SummaryMetadata.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.SummaryMetadata} returns this
 */
proto.tensorflow.SummaryMetadata.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary_description = 3;
 * @return {string}
 */
proto.tensorflow.SummaryMetadata.prototype.getSummaryDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.SummaryMetadata} returns this
 */
proto.tensorflow.SummaryMetadata.prototype.setSummaryDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DataClass data_class = 4;
 * @return {!proto.tensorflow.DataClass}
 */
proto.tensorflow.SummaryMetadata.prototype.getDataClass = function() {
  return /** @type {!proto.tensorflow.DataClass} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.tensorflow.DataClass} value
 * @return {!proto.tensorflow.SummaryMetadata} returns this
 */
proto.tensorflow.SummaryMetadata.prototype.setDataClass = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.Summary.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.Summary.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.Summary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.Summary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    proto.tensorflow.Summary.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.Summary}
 */
proto.tensorflow.Summary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.Summary;
  return proto.tensorflow.Summary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.Summary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.Summary}
 */
proto.tensorflow.Summary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.Summary.Value;
      reader.readMessage(value,proto.tensorflow.Summary.Value.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.Summary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.Summary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.Summary.Value.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.Summary.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.Summary.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.Summary.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    width: jspb.Message.getFieldWithDefault(msg, 2, 0),
    colorspace: jspb.Message.getFieldWithDefault(msg, 3, 0),
    encodedImageString: msg.getEncodedImageString_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.Summary.Image}
 */
proto.tensorflow.Summary.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.Summary.Image;
  return proto.tensorflow.Summary.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.Summary.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.Summary.Image}
 */
proto.tensorflow.Summary.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorspace(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncodedImageString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.Summary.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.Summary.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getColorspace();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEncodedImageString_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int32 height = 1;
 * @return {number}
 */
proto.tensorflow.Summary.Image.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Image} returns this
 */
proto.tensorflow.Summary.Image.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 width = 2;
 * @return {number}
 */
proto.tensorflow.Summary.Image.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Image} returns this
 */
proto.tensorflow.Summary.Image.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 colorspace = 3;
 * @return {number}
 */
proto.tensorflow.Summary.Image.prototype.getColorspace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Image} returns this
 */
proto.tensorflow.Summary.Image.prototype.setColorspace = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes encoded_image_string = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.Summary.Image.prototype.getEncodedImageString = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encoded_image_string = 4;
 * This is a type-conversion wrapper around `getEncodedImageString()`
 * @return {string}
 */
proto.tensorflow.Summary.Image.prototype.getEncodedImageString_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncodedImageString()));
};


/**
 * optional bytes encoded_image_string = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncodedImageString()`
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Image.prototype.getEncodedImageString_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncodedImageString()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tensorflow.Summary.Image} returns this
 */
proto.tensorflow.Summary.Image.prototype.setEncodedImageString = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.Summary.Audio.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.Summary.Audio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.Summary.Audio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Audio.toObject = function(includeInstance, msg) {
  var f, obj = {
    sampleRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    numChannels: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lengthFrames: jspb.Message.getFieldWithDefault(msg, 3, 0),
    encodedAudioString: msg.getEncodedAudioString_asB64(),
    contentType: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.Summary.Audio}
 */
proto.tensorflow.Summary.Audio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.Summary.Audio;
  return proto.tensorflow.Summary.Audio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.Summary.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.Summary.Audio}
 */
proto.tensorflow.Summary.Audio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSampleRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumChannels(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLengthFrames(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncodedAudioString(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Audio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.Summary.Audio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.Summary.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Audio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSampleRate();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getNumChannels();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLengthFrames();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEncodedAudioString_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional float sample_rate = 1;
 * @return {number}
 */
proto.tensorflow.Summary.Audio.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Audio} returns this
 */
proto.tensorflow.Summary.Audio.prototype.setSampleRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int64 num_channels = 2;
 * @return {number}
 */
proto.tensorflow.Summary.Audio.prototype.getNumChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Audio} returns this
 */
proto.tensorflow.Summary.Audio.prototype.setNumChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 length_frames = 3;
 * @return {number}
 */
proto.tensorflow.Summary.Audio.prototype.getLengthFrames = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Audio} returns this
 */
proto.tensorflow.Summary.Audio.prototype.setLengthFrames = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes encoded_audio_string = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.Summary.Audio.prototype.getEncodedAudioString = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encoded_audio_string = 4;
 * This is a type-conversion wrapper around `getEncodedAudioString()`
 * @return {string}
 */
proto.tensorflow.Summary.Audio.prototype.getEncodedAudioString_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncodedAudioString()));
};


/**
 * optional bytes encoded_audio_string = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncodedAudioString()`
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Audio.prototype.getEncodedAudioString_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncodedAudioString()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tensorflow.Summary.Audio} returns this
 */
proto.tensorflow.Summary.Audio.prototype.setEncodedAudioString = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string content_type = 5;
 * @return {string}
 */
proto.tensorflow.Summary.Audio.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.Summary.Audio} returns this
 */
proto.tensorflow.Summary.Audio.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.Summary.Value.oneofGroups_ = [[2,3,4,5,6,8]];

/**
 * @enum {number}
 */
proto.tensorflow.Summary.Value.ValueCase = {
  VALUE_NOT_SET: 0,
  SIMPLE_VALUE: 2,
  OBSOLETE_OLD_STYLE_HISTOGRAM: 3,
  IMAGE: 4,
  HISTO: 5,
  AUDIO: 6,
  TENSOR: 8
};

/**
 * @return {proto.tensorflow.Summary.Value.ValueCase}
 */
proto.tensorflow.Summary.Value.prototype.getValueCase = function() {
  return /** @type {proto.tensorflow.Summary.Value.ValueCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.Summary.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.Summary.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.Summary.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.Summary.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tensorflow.SummaryMetadata.toObject(includeInstance, f),
    simpleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    obsoleteOldStyleHistogram: msg.getObsoleteOldStyleHistogram_asB64(),
    image: (f = msg.getImage()) && proto.tensorflow.Summary.Image.toObject(includeInstance, f),
    histo: (f = msg.getHisto()) && proto.tensorflow.HistogramProto.toObject(includeInstance, f),
    audio: (f = msg.getAudio()) && proto.tensorflow.Summary.Audio.toObject(includeInstance, f),
    tensor: (f = msg.getTensor()) && tensorflow_core_framework_tensor_pb.TensorProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.Summary.Value}
 */
proto.tensorflow.Summary.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.Summary.Value;
  return proto.tensorflow.Summary.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.Summary.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.Summary.Value}
 */
proto.tensorflow.Summary.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 9:
      var value = new proto.tensorflow.SummaryMetadata;
      reader.readMessage(value,proto.tensorflow.SummaryMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSimpleValue(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setObsoleteOldStyleHistogram(value);
      break;
    case 4:
      var value = new proto.tensorflow.Summary.Image;
      reader.readMessage(value,proto.tensorflow.Summary.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 5:
      var value = new proto.tensorflow.HistogramProto;
      reader.readMessage(value,proto.tensorflow.HistogramProto.deserializeBinaryFromReader);
      msg.setHisto(value);
      break;
    case 6:
      var value = new proto.tensorflow.Summary.Audio;
      reader.readMessage(value,proto.tensorflow.Summary.Audio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    case 8:
      var value = new tensorflow_core_framework_tensor_pb.TensorProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_pb.TensorProto.deserializeBinaryFromReader);
      msg.setTensor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.Summary.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.Summary.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Summary.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.tensorflow.SummaryMetadata.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.Summary.Image.serializeBinaryToWriter
    );
  }
  f = message.getHisto();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.HistogramProto.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.Summary.Audio.serializeBinaryToWriter
    );
  }
  f = message.getTensor();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      tensorflow_core_framework_tensor_pb.TensorProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_name = 7;
 * @return {string}
 */
proto.tensorflow.Summary.Value.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.tensorflow.Summary.Value.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SummaryMetadata metadata = 9;
 * @return {?proto.tensorflow.SummaryMetadata}
 */
proto.tensorflow.Summary.Value.prototype.getMetadata = function() {
  return /** @type{?proto.tensorflow.SummaryMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.SummaryMetadata, 9));
};


/**
 * @param {?proto.tensorflow.SummaryMetadata|undefined} value
 * @return {!proto.tensorflow.Summary.Value} returns this
*/
proto.tensorflow.Summary.Value.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float simple_value = 2;
 * @return {number}
 */
proto.tensorflow.Summary.Value.prototype.getSimpleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.setSimpleValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearSimpleValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.Summary.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasSimpleValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes obsolete_old_style_histogram = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.Summary.Value.prototype.getObsoleteOldStyleHistogram = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes obsolete_old_style_histogram = 3;
 * This is a type-conversion wrapper around `getObsoleteOldStyleHistogram()`
 * @return {string}
 */
proto.tensorflow.Summary.Value.prototype.getObsoleteOldStyleHistogram_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getObsoleteOldStyleHistogram()));
};


/**
 * optional bytes obsolete_old_style_histogram = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getObsoleteOldStyleHistogram()`
 * @return {!Uint8Array}
 */
proto.tensorflow.Summary.Value.prototype.getObsoleteOldStyleHistogram_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getObsoleteOldStyleHistogram()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.setObsoleteOldStyleHistogram = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearObsoleteOldStyleHistogram = function() {
  return jspb.Message.setOneofField(this, 3, proto.tensorflow.Summary.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasObsoleteOldStyleHistogram = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Image image = 4;
 * @return {?proto.tensorflow.Summary.Image}
 */
proto.tensorflow.Summary.Value.prototype.getImage = function() {
  return /** @type{?proto.tensorflow.Summary.Image} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.Summary.Image, 4));
};


/**
 * @param {?proto.tensorflow.Summary.Image|undefined} value
 * @return {!proto.tensorflow.Summary.Value} returns this
*/
proto.tensorflow.Summary.Value.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasImage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HistogramProto histo = 5;
 * @return {?proto.tensorflow.HistogramProto}
 */
proto.tensorflow.Summary.Value.prototype.getHisto = function() {
  return /** @type{?proto.tensorflow.HistogramProto} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.HistogramProto, 5));
};


/**
 * @param {?proto.tensorflow.HistogramProto|undefined} value
 * @return {!proto.tensorflow.Summary.Value} returns this
*/
proto.tensorflow.Summary.Value.prototype.setHisto = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearHisto = function() {
  return this.setHisto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasHisto = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Audio audio = 6;
 * @return {?proto.tensorflow.Summary.Audio}
 */
proto.tensorflow.Summary.Value.prototype.getAudio = function() {
  return /** @type{?proto.tensorflow.Summary.Audio} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.Summary.Audio, 6));
};


/**
 * @param {?proto.tensorflow.Summary.Audio|undefined} value
 * @return {!proto.tensorflow.Summary.Value} returns this
*/
proto.tensorflow.Summary.Value.prototype.setAudio = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearAudio = function() {
  return this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TensorProto tensor = 8;
 * @return {?proto.tensorflow.TensorProto}
 */
proto.tensorflow.Summary.Value.prototype.getTensor = function() {
  return /** @type{?proto.tensorflow.TensorProto} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_tensor_pb.TensorProto, 8));
};


/**
 * @param {?proto.tensorflow.TensorProto|undefined} value
 * @return {!proto.tensorflow.Summary.Value} returns this
*/
proto.tensorflow.Summary.Value.prototype.setTensor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.tensorflow.Summary.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.Summary.Value} returns this
 */
proto.tensorflow.Summary.Value.prototype.clearTensor = function() {
  return this.setTensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Summary.Value.prototype.hasTensor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Value value = 1;
 * @return {!Array<!proto.tensorflow.Summary.Value>}
 */
proto.tensorflow.Summary.prototype.getValueList = function() {
  return /** @type{!Array<!proto.tensorflow.Summary.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.Summary.Value, 1));
};


/**
 * @param {!Array<!proto.tensorflow.Summary.Value>} value
 * @return {!proto.tensorflow.Summary} returns this
*/
proto.tensorflow.Summary.prototype.setValueList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.Summary.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.Summary.Value}
 */
proto.tensorflow.Summary.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.Summary.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorflow.Summary} returns this
 */
proto.tensorflow.Summary.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * @enum {number}
 */
proto.tensorflow.DataClass = {
  DATA_CLASS_UNKNOWN: 0,
  DATA_CLASS_SCALAR: 1,
  DATA_CLASS_TENSOR: 2,
  DATA_CLASS_BLOB_SEQUENCE: 3
};

goog.object.extend(exports, proto.tensorflow);
