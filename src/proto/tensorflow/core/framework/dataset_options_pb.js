// source: tensorflow/core/framework/dataset_options.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tensorflow.data.AutoShardPolicy', null, global);
goog.exportSymbol('proto.tensorflow.data.DistributeOptions', null, global);
goog.exportSymbol('proto.tensorflow.data.DistributeOptions.OptionalNumDevicesCase', null, global);
goog.exportSymbol('proto.tensorflow.data.ExternalStatePolicy', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalApplyDefaultOptimizationsCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalAutotuneBuffersCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCpuBudgetCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalAutotuneRamBudgetCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalFilterFusionCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalMapAndBatchFusionCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalMapAndFilterFusionCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalMapFusionCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalMapParallelizationCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalNoopEliminationCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalParallelBatchCase', null, global);
goog.exportSymbol('proto.tensorflow.data.OptimizationOptions.OptionalShuffleAndRepeatFusionCase', null, global);
goog.exportSymbol('proto.tensorflow.data.Options', null, global);
goog.exportSymbol('proto.tensorflow.data.Options.OptionalDeterministicCase', null, global);
goog.exportSymbol('proto.tensorflow.data.Options.OptionalExternalStatePolicyCase', null, global);
goog.exportSymbol('proto.tensorflow.data.Options.OptionalSlackCase', null, global);
goog.exportSymbol('proto.tensorflow.data.ThreadingOptions', null, global);
goog.exportSymbol('proto.tensorflow.data.ThreadingOptions.OptionalMaxIntraOpParallelismCase', null, global);
goog.exportSymbol('proto.tensorflow.data.ThreadingOptions.OptionalPrivateThreadpoolSizeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.data.DistributeOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.data.DistributeOptions.oneofGroups_);
};
goog.inherits(proto.tensorflow.data.DistributeOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.data.DistributeOptions.displayName = 'proto.tensorflow.data.DistributeOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.data.OptimizationOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.data.OptimizationOptions.oneofGroups_);
};
goog.inherits(proto.tensorflow.data.OptimizationOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.data.OptimizationOptions.displayName = 'proto.tensorflow.data.OptimizationOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.data.ThreadingOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.data.ThreadingOptions.oneofGroups_);
};
goog.inherits(proto.tensorflow.data.ThreadingOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.data.ThreadingOptions.displayName = 'proto.tensorflow.data.ThreadingOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.data.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.data.Options.oneofGroups_);
};
goog.inherits(proto.tensorflow.data.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorflow.data.Options.displayName = 'proto.tensorflow.data.Options';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.data.DistributeOptions.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.tensorflow.data.DistributeOptions.OptionalNumDevicesCase = {
  OPTIONAL_NUM_DEVICES_NOT_SET: 0,
  NUM_DEVICES: 2
};

/**
 * @return {proto.tensorflow.data.DistributeOptions.OptionalNumDevicesCase}
 */
proto.tensorflow.data.DistributeOptions.prototype.getOptionalNumDevicesCase = function() {
  return /** @type {proto.tensorflow.data.DistributeOptions.OptionalNumDevicesCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.DistributeOptions.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.data.DistributeOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.data.DistributeOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.data.DistributeOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.DistributeOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    autoShardPolicy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numDevices: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.data.DistributeOptions}
 */
proto.tensorflow.data.DistributeOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.data.DistributeOptions;
  return proto.tensorflow.data.DistributeOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.data.DistributeOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.data.DistributeOptions}
 */
proto.tensorflow.data.DistributeOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tensorflow.data.AutoShardPolicy} */ (reader.readEnum());
      msg.setAutoShardPolicy(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.data.DistributeOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.data.DistributeOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.data.DistributeOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.DistributeOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoShardPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional AutoShardPolicy auto_shard_policy = 1;
 * @return {!proto.tensorflow.data.AutoShardPolicy}
 */
proto.tensorflow.data.DistributeOptions.prototype.getAutoShardPolicy = function() {
  return /** @type {!proto.tensorflow.data.AutoShardPolicy} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tensorflow.data.AutoShardPolicy} value
 * @return {!proto.tensorflow.data.DistributeOptions} returns this
 */
proto.tensorflow.data.DistributeOptions.prototype.setAutoShardPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 num_devices = 2;
 * @return {number}
 */
proto.tensorflow.data.DistributeOptions.prototype.getNumDevices = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.data.DistributeOptions} returns this
 */
proto.tensorflow.data.DistributeOptions.prototype.setNumDevices = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.DistributeOptions.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.DistributeOptions} returns this
 */
proto.tensorflow.data.DistributeOptions.prototype.clearNumDevices = function() {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.DistributeOptions.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.DistributeOptions.prototype.hasNumDevices = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.data.OptimizationOptions.oneofGroups_ = [[1],[2],[3],[4],[5],[6],[9],[10],[11],[12],[14],[15],[17]];

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalApplyDefaultOptimizationsCase = {
  OPTIONAL_APPLY_DEFAULT_OPTIMIZATIONS_NOT_SET: 0,
  APPLY_DEFAULT_OPTIMIZATIONS: 1
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalApplyDefaultOptimizationsCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalApplyDefaultOptimizationsCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalApplyDefaultOptimizationsCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCase = {
  OPTIONAL_AUTOTUNE_NOT_SET: 0,
  AUTOTUNE: 2
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalAutotuneCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalAutotuneBuffersCase = {
  OPTIONAL_AUTOTUNE_BUFFERS_NOT_SET: 0,
  AUTOTUNE_BUFFERS: 3
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneBuffersCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalAutotuneBuffersCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneBuffersCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCpuBudgetCase = {
  OPTIONAL_AUTOTUNE_CPU_BUDGET_NOT_SET: 0,
  AUTOTUNE_CPU_BUDGET: 4
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCpuBudgetCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalAutotuneCpuBudgetCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneCpuBudgetCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalAutotuneRamBudgetCase = {
  OPTIONAL_AUTOTUNE_RAM_BUDGET_NOT_SET: 0,
  AUTOTUNE_RAM_BUDGET: 5
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneRamBudgetCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalAutotuneRamBudgetCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalAutotuneRamBudgetCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[4]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalFilterFusionCase = {
  OPTIONAL_FILTER_FUSION_NOT_SET: 0,
  FILTER_FUSION: 6
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalFilterFusionCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalFilterFusionCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalFilterFusionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[5]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalMapAndBatchFusionCase = {
  OPTIONAL_MAP_AND_BATCH_FUSION_NOT_SET: 0,
  MAP_AND_BATCH_FUSION: 9
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalMapAndBatchFusionCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalMapAndBatchFusionCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalMapAndBatchFusionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[6]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalMapAndFilterFusionCase = {
  OPTIONAL_MAP_AND_FILTER_FUSION_NOT_SET: 0,
  MAP_AND_FILTER_FUSION: 10
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalMapAndFilterFusionCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalMapAndFilterFusionCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalMapAndFilterFusionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[7]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalMapFusionCase = {
  OPTIONAL_MAP_FUSION_NOT_SET: 0,
  MAP_FUSION: 11
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalMapFusionCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalMapFusionCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalMapFusionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[8]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalMapParallelizationCase = {
  OPTIONAL_MAP_PARALLELIZATION_NOT_SET: 0,
  MAP_PARALLELIZATION: 12
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalMapParallelizationCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalMapParallelizationCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalMapParallelizationCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[9]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalNoopEliminationCase = {
  OPTIONAL_NOOP_ELIMINATION_NOT_SET: 0,
  NOOP_ELIMINATION: 14
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalNoopEliminationCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalNoopEliminationCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalNoopEliminationCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[10]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalParallelBatchCase = {
  OPTIONAL_PARALLEL_BATCH_NOT_SET: 0,
  PARALLEL_BATCH: 15
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalParallelBatchCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalParallelBatchCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalParallelBatchCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[11]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.OptimizationOptions.OptionalShuffleAndRepeatFusionCase = {
  OPTIONAL_SHUFFLE_AND_REPEAT_FUSION_NOT_SET: 0,
  SHUFFLE_AND_REPEAT_FUSION: 17
};

/**
 * @return {proto.tensorflow.data.OptimizationOptions.OptionalShuffleAndRepeatFusionCase}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getOptionalShuffleAndRepeatFusionCase = function() {
  return /** @type {proto.tensorflow.data.OptimizationOptions.OptionalShuffleAndRepeatFusionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.OptimizationOptions.oneofGroups_[12]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.data.OptimizationOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.data.OptimizationOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.data.OptimizationOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.OptimizationOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    applyDefaultOptimizations: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    autotune: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    autotuneBuffers: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    autotuneCpuBudget: jspb.Message.getFieldWithDefault(msg, 4, 0),
    autotuneRamBudget: jspb.Message.getFieldWithDefault(msg, 5, 0),
    filterFusion: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    mapAndBatchFusion: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    mapAndFilterFusion: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    mapFusion: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    mapParallelization: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    noopElimination: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    parallelBatch: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    shuffleAndRepeatFusion: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.data.OptimizationOptions}
 */
proto.tensorflow.data.OptimizationOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.data.OptimizationOptions;
  return proto.tensorflow.data.OptimizationOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.data.OptimizationOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.data.OptimizationOptions}
 */
proto.tensorflow.data.OptimizationOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyDefaultOptimizations(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutotune(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutotuneBuffers(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAutotuneCpuBudget(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutotuneRamBudget(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFilterFusion(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapAndBatchFusion(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapAndFilterFusion(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapFusion(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapParallelization(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoopElimination(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setParallelBatch(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShuffleAndRepeatFusion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.data.OptimizationOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.data.OptimizationOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.data.OptimizationOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.OptimizationOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * optional bool apply_default_optimizations = 1;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getApplyDefaultOptimizations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setApplyDefaultOptimizations = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.OptimizationOptions.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearApplyDefaultOptimizations = function() {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.OptimizationOptions.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasApplyDefaultOptimizations = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool autotune = 2;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getAutotune = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setAutotune = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.OptimizationOptions.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearAutotune = function() {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.OptimizationOptions.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasAutotune = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool autotune_buffers = 3;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getAutotuneBuffers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setAutotuneBuffers = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.tensorflow.data.OptimizationOptions.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearAutotuneBuffers = function() {
  return jspb.Message.setOneofField(this, 3, proto.tensorflow.data.OptimizationOptions.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasAutotuneBuffers = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 autotune_cpu_budget = 4;
 * @return {number}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getAutotuneCpuBudget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setAutotuneCpuBudget = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.tensorflow.data.OptimizationOptions.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearAutotuneCpuBudget = function() {
  return jspb.Message.setOneofField(this, 4, proto.tensorflow.data.OptimizationOptions.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasAutotuneCpuBudget = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 autotune_ram_budget = 5;
 * @return {number}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getAutotuneRamBudget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setAutotuneRamBudget = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.tensorflow.data.OptimizationOptions.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearAutotuneRamBudget = function() {
  return jspb.Message.setOneofField(this, 5, proto.tensorflow.data.OptimizationOptions.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasAutotuneRamBudget = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool filter_fusion = 6;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getFilterFusion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setFilterFusion = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.tensorflow.data.OptimizationOptions.oneofGroups_[5], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearFilterFusion = function() {
  return jspb.Message.setOneofField(this, 6, proto.tensorflow.data.OptimizationOptions.oneofGroups_[5], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasFilterFusion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool map_and_batch_fusion = 9;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getMapAndBatchFusion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setMapAndBatchFusion = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.tensorflow.data.OptimizationOptions.oneofGroups_[6], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearMapAndBatchFusion = function() {
  return jspb.Message.setOneofField(this, 9, proto.tensorflow.data.OptimizationOptions.oneofGroups_[6], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasMapAndBatchFusion = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool map_and_filter_fusion = 10;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getMapAndFilterFusion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setMapAndFilterFusion = function(value) {
  return jspb.Message.setOneofField(this, 10, proto.tensorflow.data.OptimizationOptions.oneofGroups_[7], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearMapAndFilterFusion = function() {
  return jspb.Message.setOneofField(this, 10, proto.tensorflow.data.OptimizationOptions.oneofGroups_[7], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasMapAndFilterFusion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool map_fusion = 11;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getMapFusion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setMapFusion = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.tensorflow.data.OptimizationOptions.oneofGroups_[8], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearMapFusion = function() {
  return jspb.Message.setOneofField(this, 11, proto.tensorflow.data.OptimizationOptions.oneofGroups_[8], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasMapFusion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool map_parallelization = 12;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getMapParallelization = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setMapParallelization = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.tensorflow.data.OptimizationOptions.oneofGroups_[9], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearMapParallelization = function() {
  return jspb.Message.setOneofField(this, 12, proto.tensorflow.data.OptimizationOptions.oneofGroups_[9], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasMapParallelization = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool noop_elimination = 14;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getNoopElimination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setNoopElimination = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.tensorflow.data.OptimizationOptions.oneofGroups_[10], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearNoopElimination = function() {
  return jspb.Message.setOneofField(this, 14, proto.tensorflow.data.OptimizationOptions.oneofGroups_[10], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasNoopElimination = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool parallel_batch = 15;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getParallelBatch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setParallelBatch = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.tensorflow.data.OptimizationOptions.oneofGroups_[11], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearParallelBatch = function() {
  return jspb.Message.setOneofField(this, 15, proto.tensorflow.data.OptimizationOptions.oneofGroups_[11], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasParallelBatch = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool shuffle_and_repeat_fusion = 17;
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.getShuffleAndRepeatFusion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.setShuffleAndRepeatFusion = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.tensorflow.data.OptimizationOptions.oneofGroups_[12], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.OptimizationOptions} returns this
 */
proto.tensorflow.data.OptimizationOptions.prototype.clearShuffleAndRepeatFusion = function() {
  return jspb.Message.setOneofField(this, 17, proto.tensorflow.data.OptimizationOptions.oneofGroups_[12], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.OptimizationOptions.prototype.hasShuffleAndRepeatFusion = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.data.ThreadingOptions.oneofGroups_ = [[1],[2]];

/**
 * @enum {number}
 */
proto.tensorflow.data.ThreadingOptions.OptionalMaxIntraOpParallelismCase = {
  OPTIONAL_MAX_INTRA_OP_PARALLELISM_NOT_SET: 0,
  MAX_INTRA_OP_PARALLELISM: 1
};

/**
 * @return {proto.tensorflow.data.ThreadingOptions.OptionalMaxIntraOpParallelismCase}
 */
proto.tensorflow.data.ThreadingOptions.prototype.getOptionalMaxIntraOpParallelismCase = function() {
  return /** @type {proto.tensorflow.data.ThreadingOptions.OptionalMaxIntraOpParallelismCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.ThreadingOptions.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.ThreadingOptions.OptionalPrivateThreadpoolSizeCase = {
  OPTIONAL_PRIVATE_THREADPOOL_SIZE_NOT_SET: 0,
  PRIVATE_THREADPOOL_SIZE: 2
};

/**
 * @return {proto.tensorflow.data.ThreadingOptions.OptionalPrivateThreadpoolSizeCase}
 */
proto.tensorflow.data.ThreadingOptions.prototype.getOptionalPrivateThreadpoolSizeCase = function() {
  return /** @type {proto.tensorflow.data.ThreadingOptions.OptionalPrivateThreadpoolSizeCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.ThreadingOptions.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.data.ThreadingOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.data.ThreadingOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.data.ThreadingOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.ThreadingOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxIntraOpParallelism: jspb.Message.getFieldWithDefault(msg, 1, 0),
    privateThreadpoolSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.data.ThreadingOptions}
 */
proto.tensorflow.data.ThreadingOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.data.ThreadingOptions;
  return proto.tensorflow.data.ThreadingOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.data.ThreadingOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.data.ThreadingOptions}
 */
proto.tensorflow.data.ThreadingOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxIntraOpParallelism(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrivateThreadpoolSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.data.ThreadingOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.data.ThreadingOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.data.ThreadingOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.ThreadingOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 max_intra_op_parallelism = 1;
 * @return {number}
 */
proto.tensorflow.data.ThreadingOptions.prototype.getMaxIntraOpParallelism = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.data.ThreadingOptions} returns this
 */
proto.tensorflow.data.ThreadingOptions.prototype.setMaxIntraOpParallelism = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.ThreadingOptions.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.ThreadingOptions} returns this
 */
proto.tensorflow.data.ThreadingOptions.prototype.clearMaxIntraOpParallelism = function() {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.ThreadingOptions.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.ThreadingOptions.prototype.hasMaxIntraOpParallelism = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 private_threadpool_size = 2;
 * @return {number}
 */
proto.tensorflow.data.ThreadingOptions.prototype.getPrivateThreadpoolSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorflow.data.ThreadingOptions} returns this
 */
proto.tensorflow.data.ThreadingOptions.prototype.setPrivateThreadpoolSize = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.ThreadingOptions.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.ThreadingOptions} returns this
 */
proto.tensorflow.data.ThreadingOptions.prototype.clearPrivateThreadpoolSize = function() {
  return jspb.Message.setOneofField(this, 2, proto.tensorflow.data.ThreadingOptions.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.ThreadingOptions.prototype.hasPrivateThreadpoolSize = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.data.Options.oneofGroups_ = [[1],[4],[6]];

/**
 * @enum {number}
 */
proto.tensorflow.data.Options.OptionalDeterministicCase = {
  OPTIONAL_DETERMINISTIC_NOT_SET: 0,
  DETERMINISTIC: 1
};

/**
 * @return {proto.tensorflow.data.Options.OptionalDeterministicCase}
 */
proto.tensorflow.data.Options.prototype.getOptionalDeterministicCase = function() {
  return /** @type {proto.tensorflow.data.Options.OptionalDeterministicCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.Options.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.Options.OptionalSlackCase = {
  OPTIONAL_SLACK_NOT_SET: 0,
  SLACK: 4
};

/**
 * @return {proto.tensorflow.data.Options.OptionalSlackCase}
 */
proto.tensorflow.data.Options.prototype.getOptionalSlackCase = function() {
  return /** @type {proto.tensorflow.data.Options.OptionalSlackCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.Options.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.tensorflow.data.Options.OptionalExternalStatePolicyCase = {
  OPTIONAL_EXTERNAL_STATE_POLICY_NOT_SET: 0,
  EXTERNAL_STATE_POLICY: 6
};

/**
 * @return {proto.tensorflow.data.Options.OptionalExternalStatePolicyCase}
 */
proto.tensorflow.data.Options.prototype.getOptionalExternalStatePolicyCase = function() {
  return /** @type {proto.tensorflow.data.Options.OptionalExternalStatePolicyCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.data.Options.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.data.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.data.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.data.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    deterministic: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    distributeOptions: (f = msg.getDistributeOptions()) && proto.tensorflow.data.DistributeOptions.toObject(includeInstance, f),
    optimizationOptions: (f = msg.getOptimizationOptions()) && proto.tensorflow.data.OptimizationOptions.toObject(includeInstance, f),
    slack: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    threadingOptions: (f = msg.getThreadingOptions()) && proto.tensorflow.data.ThreadingOptions.toObject(includeInstance, f),
    externalStatePolicy: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.data.Options}
 */
proto.tensorflow.data.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.data.Options;
  return proto.tensorflow.data.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.data.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.data.Options}
 */
proto.tensorflow.data.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeterministic(value);
      break;
    case 2:
      var value = new proto.tensorflow.data.DistributeOptions;
      reader.readMessage(value,proto.tensorflow.data.DistributeOptions.deserializeBinaryFromReader);
      msg.setDistributeOptions(value);
      break;
    case 3:
      var value = new proto.tensorflow.data.OptimizationOptions;
      reader.readMessage(value,proto.tensorflow.data.OptimizationOptions.deserializeBinaryFromReader);
      msg.setOptimizationOptions(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSlack(value);
      break;
    case 5:
      var value = new proto.tensorflow.data.ThreadingOptions;
      reader.readMessage(value,proto.tensorflow.data.ThreadingOptions.deserializeBinaryFromReader);
      msg.setThreadingOptions(value);
      break;
    case 6:
      var value = /** @type {!proto.tensorflow.data.ExternalStatePolicy} */ (reader.readEnum());
      msg.setExternalStatePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.data.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.data.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.data.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.data.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDistributeOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.data.DistributeOptions.serializeBinaryToWriter
    );
  }
  f = message.getOptimizationOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.data.OptimizationOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getThreadingOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.data.ThreadingOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.tensorflow.data.ExternalStatePolicy} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional bool deterministic = 1;
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.getDeterministic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.setDeterministic = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.Options.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearDeterministic = function() {
  return jspb.Message.setOneofField(this, 1, proto.tensorflow.data.Options.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasDeterministic = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DistributeOptions distribute_options = 2;
 * @return {?proto.tensorflow.data.DistributeOptions}
 */
proto.tensorflow.data.Options.prototype.getDistributeOptions = function() {
  return /** @type{?proto.tensorflow.data.DistributeOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.data.DistributeOptions, 2));
};


/**
 * @param {?proto.tensorflow.data.DistributeOptions|undefined} value
 * @return {!proto.tensorflow.data.Options} returns this
*/
proto.tensorflow.data.Options.prototype.setDistributeOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearDistributeOptions = function() {
  return this.setDistributeOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasDistributeOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OptimizationOptions optimization_options = 3;
 * @return {?proto.tensorflow.data.OptimizationOptions}
 */
proto.tensorflow.data.Options.prototype.getOptimizationOptions = function() {
  return /** @type{?proto.tensorflow.data.OptimizationOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.data.OptimizationOptions, 3));
};


/**
 * @param {?proto.tensorflow.data.OptimizationOptions|undefined} value
 * @return {!proto.tensorflow.data.Options} returns this
*/
proto.tensorflow.data.Options.prototype.setOptimizationOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearOptimizationOptions = function() {
  return this.setOptimizationOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasOptimizationOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool slack = 4;
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.getSlack = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.setSlack = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.tensorflow.data.Options.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearSlack = function() {
  return jspb.Message.setOneofField(this, 4, proto.tensorflow.data.Options.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasSlack = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ThreadingOptions threading_options = 5;
 * @return {?proto.tensorflow.data.ThreadingOptions}
 */
proto.tensorflow.data.Options.prototype.getThreadingOptions = function() {
  return /** @type{?proto.tensorflow.data.ThreadingOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.data.ThreadingOptions, 5));
};


/**
 * @param {?proto.tensorflow.data.ThreadingOptions|undefined} value
 * @return {!proto.tensorflow.data.Options} returns this
*/
proto.tensorflow.data.Options.prototype.setThreadingOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearThreadingOptions = function() {
  return this.setThreadingOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasThreadingOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ExternalStatePolicy external_state_policy = 6;
 * @return {!proto.tensorflow.data.ExternalStatePolicy}
 */
proto.tensorflow.data.Options.prototype.getExternalStatePolicy = function() {
  return /** @type {!proto.tensorflow.data.ExternalStatePolicy} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.tensorflow.data.ExternalStatePolicy} value
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.setExternalStatePolicy = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.tensorflow.data.Options.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorflow.data.Options} returns this
 */
proto.tensorflow.data.Options.prototype.clearExternalStatePolicy = function() {
  return jspb.Message.setOneofField(this, 6, proto.tensorflow.data.Options.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.data.Options.prototype.hasExternalStatePolicy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.tensorflow.data.AutoShardPolicy = {
  AUTO: 0,
  FILE: 1,
  DATA: 2,
  HINT: 3,
  OFF: -1
};

/**
 * @enum {number}
 */
proto.tensorflow.data.ExternalStatePolicy = {
  POLICY_WARN: 0,
  POLICY_IGNORE: 1,
  POLICY_FAIL: 2
};

goog.object.extend(exports, proto.tensorflow.data);
